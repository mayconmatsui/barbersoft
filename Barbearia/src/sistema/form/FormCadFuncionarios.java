package sistema.form;

import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sistema.dao.FuncionarioDao;
import sistema.model.Funcionario;
import sistema.utils.Utils;

/**
 *
 * @author matsui
 */
public class FormCadFuncionarios extends javax.swing.JFrame {

  private Boolean edit = false;
  private FormFuncionarios formFuncionarios;
  private Integer id = 0;
  private String tipo = null;

  /**
   * Creates new form FormClientes
   */
  public FormCadFuncionarios() {
    setTitle("Sistema Barbearia - Funcionarios");
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    tfNome = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    tfRG = new javax.swing.JTextField();
    jLabel3 = new javax.swing.JLabel();
    tfTelefone = new javax.swing.JTextField();
    jLabel4 = new javax.swing.JLabel();
    jLabel5 = new javax.swing.JLabel();
    tfEmail = new javax.swing.JTextField();
    tfEndereco = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    tfDataNascimento = new javax.swing.JFormattedTextField();
    btCadastrar = new javax.swing.JButton();
    btCancelar = new javax.swing.JButton();
    jLabel8 = new javax.swing.JLabel();
    tfSenha = new javax.swing.JPasswordField();
    jcTipo = new javax.swing.JComboBox<>();
    lbSenha = new javax.swing.JLabel();
    tfCPF = new javax.swing.JTextField();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Sistema Barbearia - Funcionarios");

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Funcionários"));

    jLabel1.setText("Nome");

    jLabel2.setText("RG");

    jLabel3.setText("CPF");

    jLabel4.setText("Data Nascimento");

    jLabel5.setText("Email");

    jLabel6.setText("Endereço");

    jLabel7.setText("Telefone");

    try {
      tfDataNascimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
    } catch (java.text.ParseException ex) {
      ex.printStackTrace();
    }

    btCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Yes.png"))); // NOI18N
    btCadastrar.setText("Salvar");
    btCadastrar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btCadastrarActionPerformed(evt);
      }
    });

    btCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Delete.png"))); // NOI18N
    btCancelar.setText("Cancelar");
    btCancelar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btCancelarActionPerformed(evt);
      }
    });

    jLabel8.setText("Cargo");

    jcTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Atendente", "Barbeiro" }));
    jcTipo.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        jcTipoItemStateChanged(evt);
      }
    });

    lbSenha.setText("Senha");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(tfEndereco, javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(tfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btCancelar))
              .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jLabel1)
                  .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jLabel4)
                  .addComponent(tfDataNascimento))))
            .addGap(15, 15, 15))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(lbSenha)
              .addComponent(jLabel6))
            .addGap(0, 475, Short.MAX_VALUE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel2)
              .addComponent(tfRG, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(174, 174, 174))
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(tfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel7)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(tfTelefone)
                .addGap(15, 15, 15))))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel5)
              .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel8)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jcTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))))))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel4)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addGap(2, 2, 2)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(tfDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel2)
          .addComponent(jLabel7)
          .addComponent(jLabel3))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(tfRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(tfCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel6)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(jLabel8))
        .addGap(2, 2, 2)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jcTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
        .addComponent(lbSenha)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btCadastrar)
          .addComponent(btCancelar)
          .addComponent(tfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
    setLocationRelativeTo(null);
  }// </editor-fold>//GEN-END:initComponents

  private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
    this.dispose();
  }//GEN-LAST:event_btCancelarActionPerformed

  private void jcTipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcTipoItemStateChanged
    if (!edit) {
      if (jcTipo.getSelectedItem().equals("Administrador") || jcTipo.getSelectedItem().equals("Atendente")) {
        tfSenha.setVisible(true);
        lbSenha.setVisible(true);
        tfSenha.setEnabled(true);
      } else {
        lbSenha.setVisible(false);
        tfSenha.setVisible(false);
        tfSenha.setEnabled(false);
      }
    }else{
      if (tipo.equals("Administrador") || tipo.equals("Atendente") || jcTipo.getSelectedItem().equals("Barbeiro")) {
        lbSenha.setVisible(false);
        tfSenha.setVisible(false);
        tfSenha.setEnabled(false);
      }else{
        tfSenha.setVisible(true);
        lbSenha.setVisible(true);
        tfSenha.setEnabled(true);
      }
    }
  }//GEN-LAST:event_jcTipoItemStateChanged

  private void btCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCadastrarActionPerformed
    if (edit) {
      try {
        editarFuncionario();
      } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(FormCadFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
      }
    } else {
      try {
        cadastrarFuncionario();
      } catch (ClassNotFoundException | SQLException ex) {
        Logger.getLogger(FormCadFuncionarios.class.getName()).log(Level.SEVERE, null, ex);
      }
    }
  }//GEN-LAST:event_btCadastrarActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(FormCadFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(FormCadFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(FormCadFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(FormCadFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new FormCadFuncionarios().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btCadastrar;
  private javax.swing.JButton btCancelar;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JComboBox<String> jcTipo;
  private javax.swing.JLabel lbSenha;
  private javax.swing.JTextField tfCPF;
  private javax.swing.JFormattedTextField tfDataNascimento;
  private javax.swing.JTextField tfEmail;
  private javax.swing.JTextField tfEndereco;
  private javax.swing.JTextField tfNome;
  private javax.swing.JTextField tfRG;
  private javax.swing.JPasswordField tfSenha;
  private javax.swing.JTextField tfTelefone;
  // End of variables declaration//GEN-END:variables

  public void preencheFormulario(Funcionario funcionario) {
    tfNome.setText(funcionario.getNome());
    tfDataNascimento.setText(new SimpleDateFormat("dd/MM/yyyy").format(funcionario.getDataNascimento()));
    tfRG.setText(funcionario.getRG());
    tfCPF.setText(funcionario.getCPF());
    tfTelefone.setText(funcionario.getTelefone());
    tfEndereco.setText(funcionario.getEndereco());
    tfEmail.setText(funcionario.getEmail());
    jcTipo.setSelectedItem(funcionario.getTipo());
    if(funcionario.getTipo().equals("Administrador") || funcionario.getTipo().equals("Atendente")){
      lbSenha.setVisible(false);
      tfSenha.setVisible(false);
      tfSenha.setEnabled(false);
    }
    tipo = funcionario.getTipo();
  }

  public void setEdit(Boolean edit) {
    this.edit = edit;
  }

  public void setFormFuncionarios(FormFuncionarios formFuncionarios) {
    this.formFuncionarios = formFuncionarios;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  private void editarFuncionario() throws ClassNotFoundException, SQLException {
    if (id <= 0) {
      JOptionPane.showMessageDialog(this, "Nenhum Registro foi Informado", "Erro", JOptionPane.ERROR_MESSAGE);
    } else if (tfNome.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O campo nome deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfDataNascimento.getText().isEmpty() || tfDataNascimento.getText().equals("  /  /    ")) {
      JOptionPane.showMessageDialog(this, "O campo data de nascimento deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfCPF.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O campo CPF deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (!Utils.isCPF(tfCPF.getText())) {
      JOptionPane.showMessageDialog(this, "CPF inválido, informar somentes números", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfTelefone.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O campo telefone deve Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfEndereco.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O Campor endereço deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfEmail.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O campo email deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (!Utils.isEmail(tfEmail.getText())) {
      JOptionPane.showMessageDialog(this, "Email inválido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if ((this.tipo.equals("Barbeiro") && jcTipo.getSelectedItem().equals("Administrador")) && tfSenha.getPassword().length <= 0 || (this.tipo.equals("Barbeiro") && jcTipo.getSelectedItem().equals("Atendente")) && tfSenha.getPassword().length <= 0) {
      JOptionPane.showMessageDialog(this, "O campo senha deve ser preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else {
      Funcionario funcionario = new Funcionario();
      FuncionarioDao funcionarioDao = new FuncionarioDao();

      if (funcionarioDao.checkCPFUpdate(tfCPF.getText(), id)) {
        JOptionPane.showMessageDialog(this, "CPF já cadastrado.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
      } else {
        funcionario.setId(id);
        funcionario.setNome(tfNome.getText());
        funcionario.setRG(tfRG.getText());
        funcionario.setCPF(tfCPF.getText());
        funcionario.setTelefone(tfTelefone.getText());
        funcionario.setEndereco(tfEndereco.getText());
        funcionario.setEmail(tfEmail.getText());
        funcionario.setTipo(jcTipo.getSelectedItem().toString());

        if ((this.tipo.equals("Administrador") || this.tipo.equals("Atendente")) && jcTipo.getSelectedItem().equals("Barbeiro")) {
          funcionario.setSenha("");
        }else if(this.tipo.equals("Administrador") || this.tipo.equals("Atendente")){
          funcionario.setSenha("N");
        }else {
          String senha = new String(tfSenha.getPassword());
          senha = Utils.geraSenha(senha);
          funcionario.setSenha(senha);
        }

        try {
          DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
          java.util.Date dataJava = df.parse(tfDataNascimento.getText());
          java.sql.Date dataSql = new Date(dataJava.getTime());
          funcionario.setDataNascimento(dataSql);
        } catch (ParseException ex) {
          Logger.getLogger(FormVenda.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (funcionarioDao.alterar(funcionario) == null) {
          System.out.println("Deu erro");
        } else {
          formFuncionarios.consultarFuncionario();
          this.dispose();
        }

      }
    }
  }

  private void cadastrarFuncionario() throws ClassNotFoundException, SQLException {
    if (tfNome.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O campo nome deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfDataNascimento.getText().isEmpty() || tfDataNascimento.getText().equals("  /  /    ")) {
      JOptionPane.showMessageDialog(this, "O campo data de nascimento deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfCPF.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O campo CPF deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (!Utils.isCPF(tfCPF.getText())) {
      JOptionPane.showMessageDialog(this, "CPF inválido, informar somentes números", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfTelefone.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O campo telefone deve Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfEndereco.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O Campor endereço deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (tfEmail.getText().isEmpty()) {
      JOptionPane.showMessageDialog(this, "O campo email deve ser Preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if (!Utils.isEmail(tfEmail.getText())) {
      JOptionPane.showMessageDialog(this, "Email inválido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else if ((jcTipo.getSelectedItem().equals("Administrador") || jcTipo.getSelectedItem().equals("Atendente")) && tfSenha.getPassword().length <= 0) {
      JOptionPane.showMessageDialog(this, "O campo senha deve ser preenchido", "Atenção", JOptionPane.INFORMATION_MESSAGE);
    } else {
      Funcionario funcionario = new Funcionario();
      FuncionarioDao funcionarioDao = new FuncionarioDao();

      if (funcionarioDao.checkCPFCadastro(tfCPF.getText())) {
        JOptionPane.showMessageDialog(this, "CPF já cadastrado.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
      } else {
        funcionario.setNome(tfNome.getText());
        funcionario.setRG(tfRG.getText());
        funcionario.setCPF(tfCPF.getText());
        funcionario.setTelefone(tfTelefone.getText());
        funcionario.setEndereco(tfEndereco.getText());
        funcionario.setEmail(tfEmail.getText());
        funcionario.setTipo(jcTipo.getSelectedItem().toString());

        if ((jcTipo.getSelectedItem().equals("Administrador") || jcTipo.getSelectedItem().equals("Atendente"))) {
          String senha = new String(tfSenha.getPassword());
          senha = Utils.geraSenha(senha);
          funcionario.setSenha(senha);
        } else {
          funcionario.setSenha("");
        }

        try {
          DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
          java.util.Date dataJava = df.parse(tfDataNascimento.getText());
          java.sql.Date dataSql = new Date(dataJava.getTime());
          funcionario.setDataNascimento(dataSql);
        } catch (ParseException ex) {
          Logger.getLogger(FormVenda.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (funcionarioDao.salvar(funcionario) == null) {
          System.out.println("Deu erro");
        } else {
          formFuncionarios.consultarFuncionario();
          this.dispose();
        }

      }
    }
  }

}
